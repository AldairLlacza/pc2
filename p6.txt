caso<-read.delim("clipboard")

##########################
#CONGLOMERADO JERÁRQUICO
##########################

#Análisis previo
library(DataExplorer)
plot_str(caso)
plot_missing(caso)
library(funModeling)
plot_num(caso)
library(aplpack)
faces(caso)

#Cálculo de la matriz de distancia
d<-dist(caso,method="euclidean",diag=T,upper=T)
d1<-as.matrix(d)
heatmap(d1)

library(factoextra)
d2<-get_dist(caso,method="euclidean")
fviz_dist(d2)

####################
#Método Aglomerativo
####################
clus<-hclust(d,method="average")
#Se indica que elementos se unen paso a paso
clus$merge

#Dendograma
plot(clus,main="dendograma",col="blue",frame.plot = T)
abline(h=6.3,col="red")

dendo<-as.dendrogram(clus)
plot(dendo,type="triangle")

library(factoextra)
fviz_dend(clus,k=3,rect=T)

library(ape)
plot(as.phylo(clus),type="unrooted")

fviz_dend(clus,k=3,type="phylogenic")

#Determinar cantidad de conglomerados: Método máxima variación
coe<-clus$height
vari<-((coe[2:19]/coe[1:18])-1)*100
which.max(vari)
#Número de conglomerados formados hasta la etapa e es n-e
20-17

#Cantidad de elementos por conglomerado
con3<-cutree(clus,k=3)
table(con3)

#Perfil de medias
medias<-aggregate(caso,by=list(cluster=con3),mean)
#Gráfico del perfil de medias
matplot(t(medias[,-1]),type="b",col=1:3,xlab="variables")

##########################
#CONGLOMERADO DE PARTICIóN
##########################

RNGversion(getRversion())
set.seed(30)
cluk<-kmeans(caso,centers=3,iter.max = 10)

#Número de elementos por conglomerado
cong3<-cluk$cluster
table(cong3)

#Variables que separan adecuamente a los conglomerados
anova(lm(caso$X1~factor(cong3)))

library(DiscriMiner)
discPower(caso,group=cong3)


#Perfil de medias
mediask<-cluk$centers

#Distancia entre centro de los conglomerados

dc<-dist(mediask,method="euclidean",diag=T,upper=T)


#Gráfico del perfil de medias
matplot(t(mediask),type="b",col=1:3,xlab="variables")


#Validación del número de conglomerados

#Primer criterio : Método Elbow
RNGversion(getRversion())
set.seed(30)
wss<-c()
for(k in 1:10){
  b<-kmeans(caso,centers=k)
  wss[k]<-b$tot.withinss
}
wss

plot(1:10,wss,col="blue",type="b")
abline(v=3,col="red")

library(NbClust)
set.seed(30)
indicadores<-NbClust(caso,distance="euclidean",min.nc=2,max.nc = 5,
        method="average",index="all")
indicadores$All.index
